import { Fragment, useEffect, useContext } from "react";
import Head from "next/head";
import Nav from "../../components/Nav/Nav";
import Orders from "../../components/Orders/Orders";
import { useSelector, useDispatch } from "react-redux";
import { sendCartData, fetchCartData } from "../../components/store/thunk";
import StateContext from "../../components/context/State";
import Modal from "../../components/login/Modal";
import OrderButton from "../../components/Orders/OrderButton";
import Spinner from "../../components/Spinner/Spinner";
import Error from "../../components/Error/Error";
import { uiActions } from "../../components/store/ui-slice";

export default function Order() {
  const ctx = useContext(StateContext);
  const dispatch = useDispatch();
  const blurBackground = ctx.showDropdown ? " opacity-30" : "";

  const cart = useSelector((state) => state.cart);
  const cartItems = useSelector((state) => state.cart.items);
  const stateChange = useSelector((state) => state.cart.initialCartChanged);

  const loading = useSelector((state) => state.ui.loading);

  const error = useSelector((state) => state.ui.error);

  const loadingOpacity = loading ? "opacity-50" : "";

  // const hide=()=>{
  //   dispatch(uiActions.hideCartButton())
  // }
  // hide()

  useEffect(() => {
    dispatch(fetchCartData());
  }, [dispatch]);
  useEffect(() => {
    if (stateChange) dispatch(sendCartData(cart));
  }, [dispatch, cart, stateChange]);

  return (
    <Fragment>
      <div className="bg-gray-500 h-screen  relative  flex flex-col">
        <Head>
          <title>Confirm orders</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {error && <Error />}
        <div className={`${loadingOpacity} z-10`}>
          <Nav />
        </div>
        <div
          className={`${loadingOpacity} z-30  bg-transparent overflow-visible`}
        >
          <Modal />
        </div>
        {loading && (
          <div className="z-40  bg-transparent overflow-visible ">
            <Spinner />
          </div>
        )}
        <div
          className={`${blurBackground} ${loadingOpacity} h-screen w-full z-0  flex-1 overflow-y-auto`}
        >
          <ul className="grid lg:grid-cols-3 mx-auto space-y-4 mt-6 grid-cols-1 sm:grid-cols-2 ">
            {cartItems.map((item) => (
              <Orders
                key={item.id}
                id={item.id}
                title={item.title}
                quantity={item.quantity}
                totalPrice={item.totalPrice}
                image={item.image}
              />
            ))}
          </ul>
          {cartItems.length > 1 && (
            <div className="m-6 mx-auto">
              <OrderButton />
            </div>
          )}

          {cartItems.length === 0 && (
            <div className="items-center ">
              <h1 className="text-4xl ">Add item to the cart</h1>
            </div>
          )}
        </div>
      </div>
    </Fragment>
  );
}
